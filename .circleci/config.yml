version: 2
jobs:
  build:
    working_directory: ~/TeachstoneLLC/myteachstone
    parallelism: 5
    shell: /bin/bash --login
    environment:
    - CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    - CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    - API_SYNC_TOKEN: testing
    - MY_CLASS_BASE_URL: https://int.teachstone.com
    - LOCALEAPP_API: testing
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
      environment:
        TZ: "/usr/share/zoneinfo/Asia/Tokyo"
        LANG: "en_US.utf8"
        LC_ALL: "en_US.utf8"
        LC_CTYPE: "en_US.utf8"
    - image: redis
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        name: Set timezone to Asia/Tokyo
        working_directory: ~/workcloud/workcloud
        command: |
            set +e
            echo 'Asia/Tokyo' | sudo tee -a /etc/timezone
            sudo cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
            sudo dpkg-reconfigure -f noninteractive tzdata
    - run:
        name: Downgrade MySQL from 5.7 to 5.5
        command: |
            set +e
            mysql --version
            sudo service mysql stop
            sudo rm -rf /etc/mysql
            sudo rm -rf /var/lib/mysql
            export DEBIAN_FRONTEND=noninteractive
            sudo -E apt-get -y remove mysql-server
            sudo -E apt-get -y remove mysql-community-server
            sudo -E apt-get -y remove mysql-client
            sudo -E apt-get -y remove mysql-common
            sudo -E apt-get -y remove mysql-community-client
            sudo -E apt-get -y remove mysql-apt-config
            sudo -E apt-get -y remove libmysqld-dev
            sudo -E apt-get -y remove libmysqlclient-dev
            sudo -E apt-get -y remove libmysqlclient18
            sudo -E apt-get -y remove libmysqlclient20
            sudo -E apt-get -y autoremove
            sudo -E apt-get -y install software-properties-common
            sudo -E dpkg -l | grep mysql
            sudo apt-add-repository -y ‘deb http://ppa.launchpad.net/ondrej/mysql-experimental/ubuntu 13 precise main’
            sudo apt-get update
            sudo -E apt-get -y install mysql-server-5.5 mysql-client-5.5 libmysqlclient-dev
            mysql --version
    - run:
        name: Create MySQL database
        command: |
            mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'wc_user'@'localhost' IDENTIFIED BY 'wc_pass'; FLUSH PRIVILEGES;"
            mysql -u root -e "CREATE DATABASE wc_test CHARACTER SET utf8 COLLATE utf8_general_ci;"

    # This is based on your 1.0 configuration file or project settings
    - run:
        working_directory: ~/workcloud/workcloud
        command: sudo service elasticsearch status || sudo service elasticsearch start;
    # Dependencies
    #   This would typically go in either a build or a build-and-test job when using workflows
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-stable-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-
    - run:
        name: Install PhantomJS
        command: |
            set +e
            curl --output /home/ubuntu/bin/phantomjs-2.0.1-linux-x86_64-dynamic https://s3.amazonaws.com/circle-support-bucket/phantomjs/phantomjs-2.0.1-linux-x86_64-dynamic
            chmod a+x /home/ubuntu/bin/phantomjs-2.0.1-linux-x86_64-dynamic
            sudo ln -s --force /home/ubuntu/bin/phantomjs-2.0.1-linux-x86_64-dynamic /usr/local/bin/phantomjs
    - run:
        name: Install node v0.10.22
        command: |
            set +e
            nvm install v0.10.22
            nvm alias default v0.10.22
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
    - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
    - run: export PATH="~/workcloud/workcloud/node_modules/.bin:$PATH"
    - run:
        name: Install Node.JS modules
        command: |
            set +e
            node --version
            npm config set strict-ssl false
            npm install -g grunt-cli
            npm install
    - run:
        name: Install gems
        command: |
            set +e
            gem install bundler
            gem uninstall mysql2

# workflows:
#   version: 2
#   workflow:
#     jobs:
#     - build
